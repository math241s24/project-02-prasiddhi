select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
flavor_mean_arabica <- flavor_arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Flavor Mean` = mean(Flavor)) #This gives me mean values for each country's flavor reviews
flavor_world_arabica <- merge(countries, flavor_mean_arabica, by.x = "Country of Origin", by.y = "Country of Origin", all.x = TRUE) #This merges the mean values with countries so I can map them
min(flavor_world_arabica$`Flavor Mean`, na.rm = TRUE)
max(flavor_world_arabica$`Flavor Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
flavor_breaks <- c(6.9, 7.2, 7.6, 8.0, 8.4, 8.6)
flavor_tm_arabica <- tm_shape(flavor_world_arabica) +
tm_polygons("Flavor Mean", title = "Flavor Mean", palette = coffee_palette,
breaks = flavor_breaks, style = "quantile", id = "Flavor Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(flavor_tm_arabica)
min(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
max(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
acidity_breaks <- c(6.6, 7.0, 7.4, 7.8, 8.2, 8.4)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity", palette = coffee_palette,
breaks = acidity_breaks, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
sweetness_mean_arabica <- sweetness_arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Sweetness Mean` = mean(Sweetness)) #This gives me mean values for each country's Sweetness reviews
sweetness_world_arabica <- merge(countries, sweetness_mean_arabica, by.x = "Country of Origin", by.y = "Country of Origin", all.x = TRUE) #This merges the mean values with countries so I can map them
min(sweetness_world_arabica$`Sweetness Mean`, na.rm = TRUE)
max(sweetness_world_arabica$`Sweetness Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
sweetness_breaks <- c(6.6, 7.2, 7.8, 8.4, 9.0, 9.6, 10)
sweetness_tm_arabica <- tm_shape(sweetness_world) +
tm_polygons("Sweetness Mean", title = "Sweetness", palette = coffee_palette,
breaks = sweetness_breaks, style = "quantile", id = "Sweetness Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(sweetness_tm_arabica)
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
total_mean_arabica <- total_arabica %>%
filter(!is.na(`Country of Origin`)) %>%
group_by(`Country of Origin`) %>%
summarize(`Total Cup Points Mean` = mean(`Total Cup Points`)) #This gives me mean values for each country's total cup points reviews
total_world_arabica <- merge(countries, total_mean_arabica, by.x = "Country of Origin", by.y = "Country of Origin", all.x = TRUE) #This merges the mean values with countries so I can map them
min(total_world_arabica$`Total Cup Points Mean`, na.rm = TRUE)
max(total_world_arabica$`Total Cup Points Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
total_breaks <- c(76, 78, 80, 82, 84, 86)
total_tm_arabica <- tm_shape(total_world_arabica) +
tm_polygons("Total Cup Points Mean", title = "Total Cup Points", palette = coffee_palette,
breaks = total_breaks, style = "quantile", id = "iso_a3") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(total_tm_arabica)
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
aroma_mean_arabica <- aroma_arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Aroma Mean` = mean(Aroma)) #This gives me mean values for each country's aroma reviews
aroma_world_arabica <- merge(countries, aroma_mean_arabica, by.x = "Country of Origin", by.y = "Country of Origin", all.x = TRUE) #This merges the mean values with countries so I can map them
min(aroma_world_arabica$`Aroma Mean`, na.rm = TRUE)
max(aroma_world_arabica$`Aroma Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
aroma_breaks <- c(7.0, 7.3, 7.6, 7.9, 8.2, 8.4)
aroma_tm <- tm_shape(aroma_world_arabica) +
tm_polygons("Aroma Mean", title = "Aroma", palette = coffee_palette,
breaks = aroma_breaks, style = "quantile", id = "Aroma Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(aroma_tm_arabica)
min(aroma_world_arabica$`Aroma Mean`, na.rm = TRUE)
max(aroma_world_arabica$`Aroma Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
aroma_breaks <- c(7.0, 7.3, 7.6, 7.9, 8.2, 8.4)
aroma_tm_arabica <- tm_shape(aroma_world_arabica) +
tm_polygons("Aroma Mean", title = "Aroma", palette = coffee_palette,
breaks = aroma_breaks, style = "quantile", id = "Aroma Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(aroma_tm_arabica)
min(aroma_world_arabica$`Aroma Mean`, na.rm = TRUE)
max(aroma_world_arabica$`Aroma Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
aroma_breaks <- c(7.0, 7.3, 7.6, 7.9, 8.2, 8.4)
aroma_tm_arabica <- tm_shape(aroma_world_arabica) +
tm_polygons("Aroma Mean", title = "Aroma", palette = coffee_palette,
breaks = aroma_breaks, style = "quantile", id = "Aroma Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(aroma_tm_arabica)
library(tidyverse)
library(broom)
library(rminer)
library(modelr)
library(stats)
library(glmnet)
arabica <- read_csv("data/arabica_data_cleaned.csv")
robusta <- read_csv("data/robusta_data_cleaned.csv")
merged <- read_csv("data/merged_data_cleaned.csv")
linear_reg() %>%
fit(Flavor ~ Country.of.Origin, data = arabica)
linear_reg() %>%
fit(Flavor ~ Country.of.Origin, data = arabica)
library(tidyverse)
library(broom)
library(rminer)
library(modelr)
library(stats)
library(glmnet)
arabica <- read_csv("data/arabica_data_cleaned.csv")
robusta <- read_csv("data/robusta_data_cleaned.csv")
merged <- read_csv("data/merged_data_cleaned.csv")
linear_reg() %>%
fit(Flavor ~ Country.of.Origin, data = arabica)
?linear_reg
install.packages("parsnip")
library(parsnip)
linear_reg()
linear_reg() %>%
fit(Flavor ~ Country.of.Origin, data = arabica)
broom::tidy(SAT_mod1)
lm <- linear_reg() %>%
fit(Flavor ~ Country.of.Origin, data = arabica)
broom::tidy(lm)
library(parsnip)
lm <- linear_reg() %>%
fit(Flavor ~ Country.of.Origin, data = arabica)
broom::tidy(lm)
shiny::runApp('mapping_shiny')
library(tmap)
runApp('mapping_shiny')
library(tmap)
library(sf)
data("World")
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
acidity_mean_arabica <- acidity_arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity)) #This gives me mean values for each country's acidity reviews
library(readr)
library(tidyverse)
arabica <- read_csv("arabica_data_cleaned.csv")
dim(arabica)
flavor_arabica <- arabica %>%
select(Country.of.Origin, Flavor) %>%
rename("Country of Origin" = Country.of.Origin)
acidity_arabica <- arabica %>%
select(Country.of.Origin, Acidity) %>%
rename("Country of Origin" = Country.of.Origin)
sweetness_arabica <- arabica %>%
select(Country.of.Origin, Sweetness) %>%
rename("Country of Origin" = Country.of.Origin)
aroma_arabica <- arabica %>%
select(Country.of.Origin, Aroma) %>%
rename("Country of Origin" = Country.of.Origin)
total_arabica <- arabica %>%
select(Country.of.Origin, Total.Cup.Points) %>%
rename("Country of Origin" = Country.of.Origin,
"Total Cup Points" = Total.Cup.Points)
flavor_top10 <- flavor_arabica %>%
slice_max(n = 10, order_by = Flavor)
flavor_top10
acidity_top10 <- acidity_arabica %>%
slice_max(n = 10, order_by = Acidity)
acidity_top10
sweetness_top10 <- sweetness_arabica %>%
slice_max(n = 10, order_by = Sweetness)
sweetness_top10
aroma_top10 <- aroma_arabica %>%
slice_max(n = 10, order_by = Aroma)
aroma_top10
total_top10 <- total_arabica %>%
slice_max(n = 10, order_by = `Total Cup Points`)
total_top10
flavor_countries <- unique(flavor_top10$`Country of Origin`)
aroma_countries <- unique(aroma_top10$`Country of Origin`)
intersect(flavor_countries, aroma_countries)
flavor_countries <- unique(flavor_top10$`Country of Origin`)
sweetness_countries <- unique(sweetness_top10$`Country of Origin`)
intersect(flavor_countries, sweetness_countries)
flavor_countries <- unique(flavor_top10$`Country of Origin`)
total_countries <- unique(total_top10$`Country of Origin`)
intersect(flavor_countries, total_countries)
flavor_countries <- unique(flavor_top10$`Country of Origin`)
acidity_countries <- unique(acidity_top10$`Country of Origin`)
intersect(flavor_countries, acidity_countries)
library(tmap)
library(sf)
data("World")
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
acidity_mean_arabica <- acidity_arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity)) #This gives me mean values for each country's acidity reviews
acidity_world_arabica <- merge(countries, acidity_mean_arabica, by.x = "Country of Origin", by.y = "Country of Origin", all.x = TRUE) #This merges the mean values with countries so I can map them
min(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
max(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
acidity_breaks_arabica <- c(6.6, 7.0, 7.4, 7.8, 8.2, 8.4)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
acidity_mean_robusta <- acidity_robusta %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity)) #This gives me mean values for each country's acidity reviews
runApp('mapping_shiny')
mean_arabica <- acidity_arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity))
mean_arabica
mean_arabica <- arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity))
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
mean_arabica <- arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity))
arabica <- read_csv("arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
library(readr)
library(tidyverse)
arabica <- read_csv("arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
library(readr)
library(tidyverse)
arabica <- read_csv("data/arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name)
mean_arabica <- arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity))
mean_arabica
mean_arabica <- arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity),
`Aroma Mean` = mean(Aroma),
`Flavor Mean` = mean(Flavor),
`Sweetness Mean` = mean(Sweetness),
`Total Mean` = mean(Total.Cup.Points))
mean_arabica
world_arabica <- merge(countries, mean_arabica, by.x = "Country of Origin", by.y = "Country of Origin", all.x = TRUE) #This merges the mean values with countries so I can map them
world_arabica
ui <- fluidPage(
plotOutput("map"),
selectInput("var", "Variable", world_arabica)
)
server <- function(input, output, session) {
output$map <- renderPlot({
tm_shape(World) +
tm_polygons(input$var)
})
}
shinyApp(ui, server)
runApp('mapping_shiny')
arabica <- read_csv("../data/arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
arabica <- read_csv("/data/arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
arabica <- read_csv("data/arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
runApp('mapping_shiny')
arabica <- read_csv("./data/arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
runApp('mapping_shiny')
arabica <- read_csv("../data/arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
arabica <- read_csv("../data/arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
arabica <- read_csv("../data/arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
arabica <- read_csv("../data/arabica_data_cleaned.csv") %>%
rename("Country of Origin" = Country.of.Origin)
library(tmap)
library(sf)
data("World")
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
library(tmap)
library(sf)
data("World")
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
library(tidyverse)
countries <- World %>%
select(name, iso_a3) %>%
rename("Country of Origin" = name) #This gives me countries and their locations on the world map
acidity_mean_arabica <- acidity_arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity)) #This gives me mean values for each country's acidity reviews
library(readr)
library(tidyverse)
arabica <- read_csv("arabica_data_cleaned.csv")
dim(arabica)
flavor_arabica <- arabica %>%
select(Country.of.Origin, Flavor) %>%
rename("Country of Origin" = Country.of.Origin)
acidity_arabica <- arabica %>%
select(Country.of.Origin, Acidity) %>%
rename("Country of Origin" = Country.of.Origin)
sweetness_arabica <- arabica %>%
select(Country.of.Origin, Sweetness) %>%
rename("Country of Origin" = Country.of.Origin)
aroma_arabica <- arabica %>%
select(Country.of.Origin, Aroma) %>%
rename("Country of Origin" = Country.of.Origin)
total_arabica <- arabica %>%
select(Country.of.Origin, Total.Cup.Points) %>%
rename("Country of Origin" = Country.of.Origin,
"Total Cup Points" = Total.Cup.Points)
flavor_top10 <- flavor_arabica %>%
slice_max(n = 10, order_by = Flavor)
flavor_top10
acidity_top10 <- acidity_arabica %>%
slice_max(n = 10, order_by = Acidity)
acidity_top10
sweetness_top10 <- sweetness_arabica %>%
slice_max(n = 10, order_by = Sweetness)
sweetness_top10
aroma_top10 <- aroma_arabica %>%
slice_max(n = 10, order_by = Aroma)
aroma_top10
total_top10 <- total_arabica %>%
slice_max(n = 10, order_by = `Total Cup Points`)
total_top10
flavor_countries <- unique(flavor_top10$`Country of Origin`)
aroma_countries <- unique(aroma_top10$`Country of Origin`)
intersect(flavor_countries, aroma_countries)
flavor_countries <- unique(flavor_top10$`Country of Origin`)
sweetness_countries <- unique(sweetness_top10$`Country of Origin`)
intersect(flavor_countries, sweetness_countries)
flavor_countries <- unique(flavor_top10$`Country of Origin`)
total_countries <- unique(total_top10$`Country of Origin`)
intersect(flavor_countries, total_countries)
flavor_countries <- unique(flavor_top10$`Country of Origin`)
acidity_countries <- unique(acidity_top10$`Country of Origin`)
intersect(flavor_countries, acidity_countries)
acidity_mean_arabica <- acidity_arabica %>%
filter(!is.na(`Country of Origin`)) %>% #One value didnt have a country paired so I removed it
group_by(`Country of Origin`) %>%
summarize(`Acidity Mean` = mean(Acidity)) #This gives me mean values for each country's acidity reviews
acidity_world_arabica <- merge(countries, acidity_mean_arabica, by.x = "Country of Origin", by.y = "Country of Origin", all.x = TRUE) #This merges the mean values with countries so I can map them
View(acidity_world_arabica)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
acidity_breaks_robusta <- c(6.8, 7.0, 7.2, 7.4, 8.6, 7.7)
acidity_tm_robusta <- tm_shape(acidity_world_robusta) +
tm_polygons("Acidity Mean", title = "Acidity (Robusta)", palette = coffee_palette,
breaks = acidity_breaks_robusta, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
acidity_breaks_arabica <- c(6.6, 7.0, 7.4, 7.8, 8.2, 8.4)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
min(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
max(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
acidity_breaks_arabica <- c(6.6, 7.0, 7.4, 7.8, 8.2, 8.4)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout()
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = .5, just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = .25, just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3",  just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = .25, just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = .35, just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
?tm_text
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = "AREA", just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
?text.size.variable
min(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
max(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
acidity_breaks_arabica <- c(6.6, 7.0, 7.4, 7.8, 8.2, 8.4)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = 0.35, just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
min(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
max(acidity_world_arabica$`Acidity Mean`, na.rm = TRUE)
coffee_palette <- c("#FFEBCD", "#D2B48C", "#8B4513")
acidity_breaks_arabica <- c(6.6, 7.0, 7.4, 7.8, 8.2, 8.4)
acidity_tm_arabica <- tm_shape(acidity_world_arabica) +
tm_polygons("Acidity Mean", title = "Acidity (Arabica)", palette = coffee_palette,
breaks = acidity_breaks_arabica, style = "quantile", id = "Acidity Mean") +
tm_text("iso_a3", size = 0.4, just = "center") +
tm_layout() +
tm_view(text.size.variable = TRUE)
tmap_mode("view")
tmap_leaflet(acidity_tm_arabica)
data("World")
View(World)
View(acidity_world_arabica)
acidity_world_arabica <- merge(countries, acidity_mean_arabica, by.x = "Country of Origin", by.y = "Country of Origin", all.x = TRUE, all.y = TRUE) #This merges the mean values with countries so I can map them
View(acidity_world_arabica)
View(World)
