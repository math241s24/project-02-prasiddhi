{
  "hash": "adfbb9a37e07db390d44d154ad9ad154",
  "result": {
    "markdown": "---\ntitle: \"Comparing Coffee Characteristics by Country of Origin\"\nsubtitle: \"Using tmap and ShinyApp\"\nauthor: \"Prasiddhi Thapaliya\"\ntitle-slide-attributes:\n  data-slide-number: none\nformat: revealjs\neditor: visual\nserver: shiny\nexecute:\n  echo: false\n---\n\n\n## Research Question {.smaller}\n\n#### Are certain countries associated with certain coffee characteristics?\n\nI want to compare coffees from different countries to see which coffee characteristics are associated with places of origin.\n\nI'm curious to see if coffees grown in particular countries/regions produce different flavor profiles. I made a Shinyapp that allows users to choose variables to be mapped onto a chloropleth world map. I chose the following five flavor traits:\n\n-   Flavor\n\n-   Acidity\n\n-   Sweetness\n\n-   Aroma\n\n-   Total Cup Points (total quality score from 1-100)\n\n## The Data\n\n##### scrapped and cleaned by Github user @jldbc\n\n-   Three csv files containing consumer reviews from the Coffee Quality Institute\n\n    -   Arabica, Robusta, both (merged)\n\n-   Informational variables on\n\n    -   quality measures\n\n    -   bean data (such as processing method),\n\n    -   farm data (such as altitude), etc.\n\n-   Reviews were mix of qualitative and quantitative, converted to numeric scale.\n\n## The Data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narabica %>%\n  select(Country.of.Origin, Acidity, Aroma, Flavor, Sweetness, Total.Cup.Points)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,311 × 6\n   Country.of.Origin Acidity Aroma Flavor Sweetness Total.Cup.Points\n   <chr>               <dbl> <dbl>  <dbl>     <dbl>            <dbl>\n 1 Ethiopia             8.75  8.67   8.83     10                90.6\n 2 Ethiopia             8.58  8.75   8.67     10                89.9\n 3 Guatemala            8.42  8.42   8.5      10                89.8\n 4 Ethiopia             8.42  8.17   8.58     10                89  \n 5 Ethiopia             8.5   8.25   8.5      10                88.8\n 6 Brazil               8.5   8.58   8.42     10                88.8\n 7 Peru                 8.5   8.42   8.5      10                88.8\n 8 Ethiopia             8.42  8.25   8.33      9.33             88.7\n 9 Ethiopia             8.42  8.67   8.67      9.33             88.4\n10 Ethiopia             8.5   8.08   8.58     10                88.2\n# ℹ 1,301 more rows\n```\n:::\n:::\n\n\n## Top Ten (Arabica)\n\n::: panel-tabset\n### Acidity\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 2\n   Acidity Country.of.Origin\n     <dbl> <chr>            \n 1    8.75 Ethiopia         \n 2    8.58 Ethiopia         \n 3    8.5  Ethiopia         \n 4    8.5  Brazil           \n 5    8.5  Peru             \n 6    8.5  Ethiopia         \n 7    8.5  Ethiopia         \n 8    8.5  United States    \n 9    8.5  Kenya            \n10    8.42 Guatemala        \n11    8.42 Ethiopia         \n12    8.42 Ethiopia         \n13    8.42 Ethiopia         \n14    8.42 United States    \n15    8.42 Thailand         \n```\n:::\n:::\n\n\n### Aroma\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 16 × 2\n   Aroma Country.of.Origin           \n   <dbl> <chr>                       \n 1  8.75 Ethiopia                    \n 2  8.67 Ethiopia                    \n 3  8.67 Ethiopia                    \n 4  8.58 Brazil                      \n 5  8.5  Brazil                      \n 6  8.5  Brazil                      \n 7  8.5  Brazil                      \n 8  8.42 Guatemala                   \n 9  8.42 Peru                        \n10  8.42 China                       \n11  8.42 Ethiopia                    \n12  8.42 Uganda                      \n13  8.42 Tanzania, United Republic Of\n14  8.42 Brazil                      \n15  8.42 Ethiopia                    \n16  8.42 El Salvador                 \n```\n:::\n:::\n\n\n### Flavor\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 2\n   Flavor Country.of.Origin\n    <dbl> <chr>            \n 1   8.83 Ethiopia         \n 2   8.67 Ethiopia         \n 3   8.67 Ethiopia         \n 4   8.67 Ethiopia         \n 5   8.67 United States    \n 6   8.58 Ethiopia         \n 7   8.58 Ethiopia         \n 8   8.5  Guatemala        \n 9   8.5  Ethiopia         \n10   8.5  Peru             \n11   8.5  United States    \n12   8.5  Brazil           \n```\n:::\n:::\n\n\n### Sweetness\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,218 × 2\n   Sweetness Country.of.Origin\n       <dbl> <chr>            \n 1        10 Ethiopia         \n 2        10 Ethiopia         \n 3        10 Guatemala        \n 4        10 Ethiopia         \n 5        10 Ethiopia         \n 6        10 Brazil           \n 7        10 Peru             \n 8        10 Ethiopia         \n 9        10 Ethiopia         \n10        10 United States    \n# ℹ 1,208 more rows\n```\n:::\n:::\n\n\n### Total\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   Total.Cup.Points Country.of.Origin\n              <dbl> <chr>            \n 1             90.6 Ethiopia         \n 2             89.9 Ethiopia         \n 3             89.8 Guatemala        \n 4             89   Ethiopia         \n 5             88.8 Ethiopia         \n 6             88.8 Brazil           \n 7             88.8 Peru             \n 8             88.7 Ethiopia         \n 9             88.4 Ethiopia         \n10             88.2 Ethiopia         \n```\n:::\n:::\n\n:::\n\n## Top Ten (Robusta)\n\n::: panel-tabset\n### Acidity\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   Salt...Acid Country.of.Origin\n         <dbl> <chr>            \n 1        8    India            \n 2        8    India            \n 3        8    India            \n 4        7.92 Uganda           \n 5        7.83 India            \n 6        7.83 India            \n 7        7.83 Uganda           \n 8        7.83 Uganda           \n 9        7.83 India            \n10        7.83 India            \n```\n:::\n:::\n\n\n### Aroma\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   Fragrance...Aroma Country.of.Origin\n               <dbl> <chr>            \n 1              8.33 Uganda           \n 2              8    India            \n 3              8    Uganda           \n 4              8    India            \n 5              8    Uganda           \n 6              8    Uganda           \n 7              7.92 India            \n 8              7.92 United States    \n 9              7.83 Uganda           \n10              7.83 Uganda           \n```\n:::\n:::\n\n\n### Flavor\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 2\n   Flavor Country.of.Origin\n    <dbl> <chr>            \n 1   8.08 Uganda           \n 2   7.92 Uganda           \n 3   7.92 India            \n 4   7.92 Uganda           \n 5   7.83 India            \n 6   7.83 Uganda           \n 7   7.83 Uganda           \n 8   7.83 India            \n 9   7.75 India            \n10   7.75 India            \n11   7.75 India            \n12   7.75 India            \n13   7.75 Uganda           \n14   7.75 India            \n```\n:::\n:::\n\n\n### Sweetness\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 2\n   Bitter...Sweet Country.of.Origin\n            <dbl> <chr>            \n 1           8.42 Ecuador          \n 2           8    Uganda           \n 3           8    India            \n 4           8    India            \n 5           7.92 India            \n 6           7.92 India            \n 7           7.83 India            \n 8           7.83 India            \n 9           7.75 Uganda           \n10           7.75 India            \n11           7.75 Uganda           \n12           7.75 India            \n13           7.75 Uganda           \n14           7.75 Uganda           \n15           7.75 Ecuador          \n```\n:::\n:::\n\n\n### Total\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   Total.Cup.Points Country.of.Origin\n              <dbl> <chr>            \n 1             83.8 Uganda           \n 2             83.5 India            \n 3             83.2 India            \n 4             83   Uganda           \n 5             83   Uganda           \n 6             82.8 India            \n 7             82.6 India            \n 8             82.5 India            \n 9             82.5 India            \n10             82.4 Uganda           \n```\n:::\n:::\n\n:::\n\n## Top Ten (Both)\n\n::: panel-tabset\n### Acidity\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 2\n   Acidity Country.of.Origin\n     <dbl> <chr>            \n 1    8.75 Ethiopia         \n 2    8.58 Ethiopia         \n 3    8.5  Ethiopia         \n 4    8.5  Brazil           \n 5    8.5  Peru             \n 6    8.5  Ethiopia         \n 7    8.5  Ethiopia         \n 8    8.5  United States    \n 9    8.5  Kenya            \n10    8.42 Guatemala        \n11    8.42 Ethiopia         \n12    8.42 Ethiopia         \n13    8.42 Ethiopia         \n14    8.42 United States    \n15    8.42 Thailand         \n```\n:::\n:::\n\n\n### Aroma\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 16 × 2\n   Aroma Country.of.Origin           \n   <dbl> <chr>                       \n 1  8.75 Ethiopia                    \n 2  8.67 Ethiopia                    \n 3  8.67 Ethiopia                    \n 4  8.58 Brazil                      \n 5  8.5  Brazil                      \n 6  8.5  Brazil                      \n 7  8.5  Brazil                      \n 8  8.42 Guatemala                   \n 9  8.42 Peru                        \n10  8.42 China                       \n11  8.42 Ethiopia                    \n12  8.42 Uganda                      \n13  8.42 Tanzania, United Republic Of\n14  8.42 Brazil                      \n15  8.42 Ethiopia                    \n16  8.42 El Salvador                 \n```\n:::\n:::\n\n\n### Flavor\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 2\n   Flavor Country.of.Origin\n    <dbl> <chr>            \n 1   8.83 Ethiopia         \n 2   8.67 Ethiopia         \n 3   8.67 Ethiopia         \n 4   8.67 Ethiopia         \n 5   8.67 United States    \n 6   8.58 Ethiopia         \n 7   8.58 Ethiopia         \n 8   8.5  Guatemala        \n 9   8.5  Ethiopia         \n10   8.5  Peru             \n11   8.5  United States    \n12   8.5  Brazil           \n```\n:::\n:::\n\n\n### Sweetness\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,218 × 2\n   Sweetness Country.of.Origin\n       <dbl> <chr>            \n 1        10 Ethiopia         \n 2        10 Ethiopia         \n 3        10 Guatemala        \n 4        10 Ethiopia         \n 5        10 Ethiopia         \n 6        10 Brazil           \n 7        10 Peru             \n 8        10 Ethiopia         \n 9        10 Ethiopia         \n10        10 United States    \n# ℹ 1,208 more rows\n```\n:::\n:::\n\n\n### Total\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   Total.Cup.Points Country.of.Origin\n              <dbl> <chr>            \n 1             90.6 Ethiopia         \n 2             89.9 Ethiopia         \n 3             89.8 Guatemala        \n 4             89   Ethiopia         \n 5             88.8 Ethiopia         \n 6             88.8 Brazil           \n 7             88.8 Peru             \n 8             88.7 Ethiopia         \n 9             88.4 Ethiopia         \n10             88.2 Ethiopia         \n```\n:::\n:::\n\n:::\n\n## Limitations\n\n-   Much more data on arabica than robusta species\n\n-   Some countries have many more observations than others\n\n    -   Ethiopia vs. India\n\n-   Correlation vs Causation\n\n    -   Two coffees grown at different altitudes, different countries\n\n    -   Is it *really* country of origin that creates the flavor profile?\n    \n## ShinyApp\n\n\n::: {.cell context='server'}\n\n:::\n\n\n    \n## Predictive Modelling\n\n#### Can we predict country of origin based on flavor profile using a supervised learning algorithm?\n\n\n\npreservea0b3f0f68e416d6b\npreserved2d21b0132a9607e\n\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"dependencies\">\n{\"type\":\"list\",\"attributes\":{},\"value\":[]}\n</script>\n<!--/html_preserve-->\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"execution_dependencies\">\n{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\",\"version\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"data.frame\"]},\"row.names\":{\"type\":\"integer\",\"attributes\":{},\"value\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"base\",\"bit\",\"bit64\",\"cli\",\"colorspace\",\"compiler\",\"crayon\",\"datasets\",\"digest\",\"dplyr\",\"ellipsis\",\"evaluate\",\"fansi\",\"fastmap\",\"forcats\",\"generics\",\"ggplot2\",\"glue\",\"graphics\",\"grDevices\",\"grid\",\"gtable\",\"hms\",\"htmltools\",\"httpuv\",\"jsonlite\",\"knitr\",\"later\",\"lifecycle\",\"lubridate\",\"magrittr\",\"methods\",\"mime\",\"munsell\",\"parallel\",\"pillar\",\"pkgconfig\",\"promises\",\"purrr\",\"R6\",\"Rcpp\",\"readr\",\"rlang\",\"rmarkdown\",\"rstudioapi\",\"scales\",\"shiny\",\"stats\",\"stringi\",\"stringr\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"timechange\",\"tools\",\"tzdb\",\"utf8\",\"utils\",\"vctrs\",\"vroom\",\"withr\",\"xfun\",\"xtable\",\"yaml\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"4.3.2\",\"4.0.5\",\"4.0.5\",\"3.6.2\",\"2.1-0\",\"4.3.2\",\"1.5.2\",\"4.3.2\",\"0.6.33\",\"1.1.4\",\"0.3.2\",\"0.22\",\"1.0.4\",\"1.1.1\",\"1.0.0\",\"0.1.3\",\"3.5.0\",\"1.6.2\",\"4.3.2\",\"4.3.2\",\"4.3.2\",\"0.3.4\",\"1.1.3\",\"0.5.7\",\"1.6.14\",\"1.8.7\",\"1.44\",\"1.3.2\",\"1.0.3\",\"1.9.3\",\"2.0.3\",\"4.3.2\",\"0.12\",\"0.5.0\",\"4.3.2\",\"1.9.0\",\"2.0.3\",\"1.2.1\",\"1.0.2\",\"2.5.1\",\"1.0.11\",\"2.1.4\",\"1.1.3\",\"2.26\",\"0.16.0\",\"1.3.0\",\"1.8.0\",\"4.3.2\",\"1.7.12\",\"1.5.0\",\"3.2.1\",\"1.3.1\",\"1.2.0\",\"2.0.0\",\"0.2.0\",\"4.3.2\",\"0.4.0\",\"1.2.3\",\"4.3.2\",\"0.6.4\",\"1.6.3\",\"2.5.1\",\"0.40\",\"1.8-4\",\"2.3.7\"]}]}]}\n</script>\n<!--/html_preserve-->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {
      "preservea0b3f0f68e416d6b": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlibrary(shiny)\nlibrary(tmap)\nlibrary(tmaptools)\nlibrary(tidyverse)\ndata(\"World\")\n\n#datasets\ncountries <- World %>%\n  select(name, iso_a3) %>%\n  rename(\"Country of Origin\" = name)\n\narabica <- read_csv(\"data/arabica_data_cleaned.csv\") %>%\n  rename(\"Country of Origin\" = Country.of.Origin,\n         \"Total Cup Points\" = Total.Cup.Points) %>%\n  select(\"Country of Origin\",\"Acidity\", \"Aroma\", \"Flavor\", \"Sweetness\", \"Total Cup Points\") %>%\n  mutate(`Country of Origin` = recode(`Country of Origin`,\n                                      \"Cote d?Ivoire\" = \"Cote d'Ivoire\",\n                                      \"Tanzania, United Republic Of\" = \"Tanzania\",\n                                      \"Laos\" = \"Lao PDR\",\n                                      \"United States (Puerto Rico)\" = \"Puerto Rico\",\n                                      \"United States (Hawaii)\" = \"United States\")) %>% \n  filter(`Country of Origin` != \"Mauritius\") %>%\n  filter(!is.na(`Country of Origin`)) %>%\n  group_by(`Country of Origin`) %>%\n  summarize(`Acidity` = mean(Acidity),\n            `Aroma` = mean(Aroma),\n            `Flavor` = mean(Flavor),\n            `Sweetness` = mean(Sweetness),\n            `Total Cup Points` = mean(`Total Cup Points`)) \n\narabica_world <- merge(countries, arabica, \n      by.x = \"Country of Origin\", by.y = \"Country of Origin\", \n      all.x = TRUE, all.y = TRUE)\n\nrobusta <- read_csv(\"data/robusta_data_cleaned.csv\") %>%\n  rename(\"Country of Origin\" = Country.of.Origin,\n         \"Total Cup Points\" = Total.Cup.Points,\n         \"Acidity\" = `Salt...Acid`,\n         \"Aroma\" = `Fragrance...Aroma`,\n         \"Sweetness\" = `Bitter...Sweet`) %>%\n  select(\"Country of Origin\",\"Acidity\", \"Aroma\", \"Flavor\", \"Sweetness\", \"Total Cup Points\") %>% \n  filter(!is.na(`Country of Origin`)) %>%\n  group_by(`Country of Origin`) %>%\n  summarize(`Acidity` = mean(Acidity),\n            `Aroma` = mean(Aroma),\n            `Flavor` = mean(Flavor),\n            `Sweetness` = mean(Sweetness),\n            `Total Cup Points` = mean(`Total Cup Points`))\n\nrobusta_world <- merge(countries, robusta, \n                       by.x = \"Country of Origin\", by.y = \"Country of Origin\", \n                       all.x = TRUE, all.y = TRUE)\n\nmerged <- read_csv(\"data/merged_data_cleaned.csv\") %>%\n  rename(\"Country of Origin\" = Country.of.Origin,\n         \"Total Cup Points\" = Total.Cup.Points) %>%\n  select(\"Country of Origin\",\"Acidity\", \"Aroma\", \"Flavor\", \"Sweetness\", \"Total Cup Points\") %>%\n  mutate(`Country of Origin` = recode(`Country of Origin`,\n                                      \"Cote d?Ivoire\" = \"Cote d'Ivoire\",\n                                      \"Tanzania, United Republic Of\" = \"Tanzania\",\n                                      \"Laos\" = \"Lao PDR\",\n                                      \"United States (Puerto Rico)\" = \"Puerto Rico\",\n                                      \"United States (Hawaii)\" = \"United States\")) %>% \n  filter(`Country of Origin` != \"Mauritius\") %>% \n  filter(!is.na(`Country of Origin`)) %>%\n  group_by(`Country of Origin`) %>%\n  summarize(`Acidity` = mean(Acidity),\n            `Aroma` = mean(Aroma),\n            `Flavor` = mean(Flavor),\n            `Sweetness` = mean(Sweetness),\n            `Total Cup Points` = mean(`Total Cup Points`))\n\nboth_world <- merge(countries, arabica, \n                       by.x = \"Country of Origin\", by.y = \"Country of Origin\", \n                       all.x = TRUE, all.y = TRUE)\n\n\n#Shinyapp\nif (require(\"shiny\")) {\n  \n  arabica_vars <- setdiff(names(arabica_world), c(\"Country of Origin\", \"geometry\", \"iso_a3\"))\n  robusta_vars <- setdiff(names(robusta_world), c(\"Country of Origin\", \"geometry\", \"iso_a3\"))\n  both_vars <- setdiff(names(both_world), c(\"Country of Origin\", \"geometry\", \"iso_a3\"))\n  coffee_palette <- c(\"#FFEBCD\", \"#D2B48C\", \"#8B4513\")\n  species_names <- c(\"Arabica\", \"Robusta\", \"Both\") \n  \n  ui <- fluidPage(\n    titlePanel(\"Coffee by Country\"),\n    tmapOutput(\"map\"),\n    selectInput(\"var\", \"Characteristic\", arabica_vars),\n    selectInput(\"species\", \"Species\", choices = species_names)  # Updated input label\n  )\n  \n  server <- function(input, output, session) {\n    output$map <- renderTmap({\n      species_label <- switch(input$species,\n                              \"Arabica\" = \"arabica_world\",\n                              \"Robusta\" = \"robusta_world\",\n                              \"Both\" = \"both_world\")\n      \n      dataset <- get(species_label)\n      \n      tm_shape(dataset) +\n        tm_polygons(input$var, zindex = 401, palette = coffee_palette, id = input$var) +\n        tm_text(\"iso_a3\", size = 0.4, just = \"center\")\n    })\n    \n    observe({\n      var <- input$var\n      species_name <- input$species\n      \n      species_label <- switch(species_name,\n                              \"Arabica\" = \"arabica_world\",\n                              \"Robusta\" = \"robusta_world\",\n                              \"Both\" = \"both_world\")\n      \n      dataset <- get(species_label)\n      \n      tmapProxy(\"map\", session, {\n        tm_remove_layer(401) +\n          tm_shape(dataset) +\n          tm_polygons(title = paste(var, \"(\",species_name,\")\"), var, zindex = 401, palette = coffee_palette, id = input$var) +\n          tm_text(\"iso_a3\", size = 0.4, just = \"center\")\n      })\n    })\n  }\t\n  \n  app <- shinyApp(ui, server)\n  if (interactive()) app\n}\n\n</script>\n",
      "preserved2d21b0132a9607e": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-extras\">\nojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {\n  quos <- rlang::enquos(...)\n  vars <- rlang::list2(...)\n  nm <- names(vars)\n  if (is.null(nm)) {\n    nm <- rep_len(\"\", length(vars))\n  }\n  mapply(function(q, nm, val) {\n    # Infer name, if possible\n    if (nm == \"\") {\n      tryCatch({\n        nm <- rlang::as_name(q)\n      }, error = function(e) {\n        code <- paste(collapse = \"\\n\", deparse(rlang::f_rhs(q)))\n        stop(\"ojs_define() could not create a name for the argument: \", code)\n      })\n    }\n    .session$output[[nm]] <- val\n    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)\n    .session$sendCustomMessage(\"ojs-export\", list(name = nm))\n    NULL\n  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)\n  invisible()\n}\n</script>\n"
    },
    "postProcess": true
  }
}