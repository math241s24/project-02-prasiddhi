{
  "hash": "b3f21cfad3fd290a76032cc0eb4f999f",
  "result": {
    "markdown": "---\ntitle: \"Datasets\"\noutput: pdf_document\ndate: \"2024-04-04\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\narabica <- read_csv(\"arabica_data_cleaned.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 1311 Columns: 44\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(24): Species, Owner, Country.of.Origin, Farm.Name, Lot.Number, Mill, IC... dbl\n(20): ...1, Number.of.Bags, Aroma, Flavor, Aftertaste, Acidity, Body, Ba...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nrobusta <- read_csv(\"robusta_data_cleaned.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 28 Columns: 44\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(23): Species, Owner, Country.of.Origin, Farm.Name, Lot.Number, Mill, IC... dbl\n(21): ...1, Number.of.Bags, Harvest.Year, Fragrance...Aroma, Flavor, Aft...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nmerged <- read_csv(\"merged_data_cleaned.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 1339 Columns: 44\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(24): Species, Owner, Country.of.Origin, Farm.Name, Lot.Number, Mill, IC... dbl\n(20): ...1, Number.of.Bags, Aroma, Flavor, Aftertaste, Acidity, Body, Ba...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\ndim(arabica)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1311   44\n```\n:::\n\n```{.r .cell-code}\ndim(robusta)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 28 44\n```\n:::\n\n```{.r .cell-code}\ndim(merged)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1339   44\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}